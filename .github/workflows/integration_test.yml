name: Integration tests
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  fetch-tools:
    runs-on: ubuntu-latest
    name: Fetch tools
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-task@v1
      - uses: ./.github/actions/fetch_tools
        with:
          artifact: binaries
  build-deployer:
    runs-on: ubuntu-latest
    name: Build deployer tool
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-task@v1
      - uses: ./.github/actions/build_deployer
        with:
          artifact: binaries
  build-docker:
    runs-on: ubuntu-latest
    name: Build and push docker image
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-task@v1
      - uses: ./.github/actions/build_docker
        with:
          docker_username: ${{secrets.DOCKER_USERNAME}}
          docker_password: ${{secrets.DOCKERHUB_TOKEN}}
          docker_registry: ${{secrets.DOCKER_REGISTRY}}
          docker_image: ${{secrets.IMAGE_NAME}}
          docker_tag: ${{ github.sha }}
          docker_push: true
  integration-test-kind:
    runs-on: ubuntu-latest
    name: Run tests on kind
    needs: ["build-docker","build-deployer","fetch-tools"]
    env:
      VAULT_ADDR: ${{secrets.VAULT_ADDR}}
      VAULT_TOKEN: ${{secrets.VAULT_TOKEN}}
      DOCKER_REGISTRY: ${{secrets.DOCKER_REGISTRY}}
      IMAGE_NAME: ${{secrets.IMAGE_NAME}}
    strategy:
      matrix:
        vault_auth_method: ["token","app-role"]
        kubernetes_version: ["1.21.2"]
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-task@v1
      - uses: actions/download-artifact@v2
        with:
          name: binaries
          path: ./bin/
      - name: Prepare token config
        run:  |
          chmod -R +x ./bin/*
          mkdir -p tests/e2e/generated_manifests/
          ./bin/deployer vault ${{matrix.vault_auth_method}} -x token_${{ github.sha }} -m true
      - name: Create cluster
        env:
          IMAGE_VERSION: ${{github.sha}}
        run: task cluster:create KUBERNETES_VERSION=${{matrix.kubernetes_version}}
      - name: Delete cluster
        run: task cluster:delete
